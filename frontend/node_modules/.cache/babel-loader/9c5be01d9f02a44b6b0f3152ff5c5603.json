{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://localhost:3000/api';\nconst SERVICE = axios.create({\n  baseURL,\n  withCredentials: true\n});\nconst PLACE_SERVICE = {\n  postaddress: async places => {\n    console.log('llega a service;;;;' + Object.values(places));\n    return await SERVICE.post('/places', places);\n  },\n  getPlace: async () => {\n    console.log();\n  } //getAddress: async (userid) => {\n  //return await SERVICE.get('/places', userid)\n  //},\n\n};\nexport const placeService = data => {\n  console.log('data', data);\n  return SERVICE.post('/places', data).then(response => response.data).catch(err => {\n    throw err;\n  });\n};\nexport default PLACE_SERVICE;","map":{"version":3,"sources":["/home/guilherme/Documentos/ironhack/proyecto-final/frontend/src/services/post-place.js"],"names":["axios","baseURL","SERVICE","create","withCredentials","PLACE_SERVICE","postaddress","places","console","log","Object","values","post","getPlace","placeService","data","then","response","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,2BAAhB;AAEA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAAEF,EAAAA,OAAF;AAAWG,EAAAA,eAAe,EAAE;AAA5B,CAAb,CAAhB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,MAAMC,MAAN,IAAgB;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBC,MAAM,CAACC,MAAP,CAAcJ,MAAd,CAApC;AACA,WAAO,MAAML,OAAO,CAACU,IAAR,CAAa,SAAb,EAAwBL,MAAxB,CAAb;AACD,GAJmB;AAKpBM,EAAAA,QAAQ,EAAE,YAAW;AACnBL,IAAAA,OAAO,CAACC,GAAR;AACD,GAPmB,CAQpB;AACE;AACF;;AAVoB,CAAtB;AAaA,OAAO,MAAMK,YAAY,GAAGC,IAAI,IAAI;AAClCP,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,IAApB;AACA,SAAOb,OAAO,CAACU,IAAR,CAAa,SAAb,EAAwBG,IAAxB,EACJC,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACF,IADtB,EAEJG,KAFI,CAEEC,GAAG,IAAI;AACZ,UAAMA,GAAN;AACD,GAJI,CAAP;AAKD,CAPM;AASP,eAAed,aAAf","sourcesContent":["import axios from 'axios'\nconst baseURL = 'http://localhost:3000/api'\n\nconst SERVICE = axios.create({ baseURL, withCredentials: true })\n\nconst PLACE_SERVICE = {\n  postaddress: async places => {\n    console.log('llega a service;;;;' + Object.values(places))\n    return await SERVICE.post('/places', places)\n  },\n  getPlace: async() => {\n    console.log()\n  }\n  //getAddress: async (userid) => {\n    //return await SERVICE.get('/places', userid)\n  //},\n}\n\nexport const placeService = data => {\n  console.log('data', data)\n  return SERVICE.post('/places', data)\n    .then(response => response.data)\n    .catch(err => {\n      throw err\n    })\n}\n\nexport default PLACE_SERVICE\n"]},"metadata":{},"sourceType":"module"}