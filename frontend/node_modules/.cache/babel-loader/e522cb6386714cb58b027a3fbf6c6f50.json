{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Documentos/ironhack/proyecto-final/frontend/src/components/home/Place.js\";\n//import React from 'react'\n//import Axios from 'axios'\n//import { Form, Icon, Input, Button, Checkbox, Card } from 'antd'\n//import { Layout, Menu, Breadcrumb } from 'antd'\n//import 'antd/dist/antd.css'\n//import PLACE_SERVICE, { placeService } from '../../services/post-place'\n//import { MyContext } from '../../context'\n//const { Header, Content, Footer } = Layout\nconst baseURL = process.env.NODE_ENV === 'production' ? 'here should be your production endpoint' : 'http://localhost:3000/api';\n\nclass Place extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      unplan: {},\n      user: {},\n      places: {\n        name: '',\n        address: ''\n      },\n      form: {\n        title: '',\n        button: '',\n        endpoint: ''\n      }\n    };\n\n    this.handleInputs = e => {\n      const places = this.state.places;\n      const key = e.target.name;\n      places[key] = e.target.value;\n      this.setState({\n        places\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            places = _this$state.places,\n            form = _this$state.form;\n\n      if (form.title === 'Edit') {\n        Axios.put(\"http://localhost:3000/api/\".concat(form.endpoint), places).then(({\n          data\n        }) => {\n          console.log(data);\n          this.setState({\n            places: {\n              name: '',\n              address: ''\n            }\n          });\n          this.props.history.push('/places/${plan._id');\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        Axios.post('http://localhost:3000/api/places', places).then(({\n          data\n        }) => {\n          console.log(data);\n          this.setState({\n            character: {\n              name: '',\n              address: ''\n            }\n          });\n          this.props.history.push('/places/${plan._id}');\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n  }\n\n  //esso hace que me jale la parte de guardar la informacion de los places en la base de datos\n  //onSubmit = e => {\n  //e.preventDefault()\n  //let { user } = this.state\n  //console.log('onsubmit', user)\n  //placeService(user)\n  //.then(res => console.log('la respuesta en onsubment', res))\n  //.catch(err => console.log('el error en onsubmit', err))\n  //}\n  componentDidMount() {\n    if (!localStorage.getItem('user')) return this.props.history.push('/login');\n    Axios.get(\"\".concat(baseURL, \"/selectedPlan/\").concat(this.props.match.params.id)).then(({\n      data\n    }) => {\n      this.setState({\n        unplan: data.plan\n      });\n    }).catch(err => {\n      console.log(err);\n    }); //rocket\n\n    const params = this.props.match.params;\n\n    if (params.id) {\n      Axios.get(\"\".concat(baseURL, \"http://localhost:3000/api/places/\").concat(params.id)).then(({\n        data: {\n          places\n        }\n      }) => this.setState({\n        places\n      }));\n      this.setState({\n        form: {\n          title: 'Edit',\n          button: 'Edit',\n          endpoint: \"/places/\".concat(params.id)\n        }\n      });\n    } else {\n      this.setState({\n        form: {\n          title: 'Create',\n          button: 'Create',\n          endpoint: '/places/'\n        }\n      });\n    }\n  } // table = () => {\n  // return (this.state.places.map((x) => {\n  //   return(\n  //     <tr key={x.place}>\n  //       <th>{x.place}</th>\n  //     <td>{x.name}</td>\n  //   <td>{x.address}</td>\n  //    </tr>\n  //)\n  // }))\n  //}\n  //placeTransform = async() => {\n  //const response = await PLACE_SERVICE.placeService(this.state.place._id)\n  //const arrayplaces = response.data.places\n  //this.setState({place: arrayplaces})\n  //}\n\n\n  render() {\n    const _this$state2 = this.state,\n          places = _this$state2.places,\n          form = _this$state2.form;\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      style: {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: 'peru'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: form.title,\n      style: {\n        width: '50vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: places.name,\n      onChange: this.handleInputs,\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: places.name,\n      onChange: this.handleInputs,\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"address name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: places.address,\n      onChange: this.handleInputs,\n      type: \"text\",\n      name: \"address\",\n      placeholder: \"put your address here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"submit\",\n      value: form.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })))));\n  }\n\n} //render() {\n//const { unplan } = this.state\n//if (!unplan) return <p>Loading data...</p>\n//this.props.match.params.id\n//return (\n//<div style={{ display: 'flex', justifyContent: 'space-around' }}>\n//<Layout>\n//<Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n//<div className=\"logo\" />\n//<Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']} style={{ lineHeight: '64px' }}>\n//<Menu.Item key=\"1\">nav 1</Menu.Item>\n//<Menu.Item key=\"2\">nav 2</Menu.Item>\n//<Menu.Item key=\"3\">nav 3</Menu.Item>\n//</Menu>\n//</Header>\n//<Content style={{ padding: '0 50px', marginTop: 64 }}>\n//<Breadcrumb style={{ margin: '16px 0' }}>\n//<Breadcrumb.Item>Home</Breadcrumb.Item>\n//<Breadcrumb.Item>List</Breadcrumb.Item>\n//<Breadcrumb.Item>App</Breadcrumb.Item>\n//</Breadcrumb>\n//<div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n//<Card style={{ width: 300 }}>\n//<h1>{unplan.name}</h1>\n//<p>{unplan.price}</p>\n//<p>{unplan.role}</p>\n//<p>{unplan.description}</p>\n//<img src={unplan.image} alt=\"\" />\n//</Card>\n//<p>{unplan.name}</p>\n//<Form onSubmit={this.onSubmit} className=\"login-form\">\n//<Form.Item>\n//<Input\n//onChange={this.handleInput}\n//name=\"name\"\n//prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n//placeholder=\"Address name\"\n///>\n//</Form.Item>\n//<Form.Item>\n//<Input\n//onChange={this.handleInput}\n//name=\"address\"\n//prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n//placeholder=\"Put your address here\"\n///>\n//<Form.Item>\n//<Input type=\"submit\" value=\"Submit\" />\n//</Form.Item>\n//</Form.Item>\n//</Form>\n//<a href={`/pedidoCreate/${unplan._id}`}>\n//<button>Add</button>\n//</a>\n//</div>\n//</Content>\n//</Layout>\n//</div>\n//)\n// }\n\n\nexport default Place;","map":{"version":3,"sources":["/home/guilherme/Documentos/ironhack/proyecto-final/frontend/src/components/home/Place.js"],"names":["baseURL","process","env","NODE_ENV","Place","React","Component","state","unplan","user","places","name","address","form","title","button","endpoint","handleInputs","e","key","target","value","setState","onSubmit","preventDefault","Axios","put","then","data","console","log","props","history","push","catch","error","post","character","componentDidMount","localStorage","getItem","get","match","params","id","plan","err","render","width","height","display","alignItems","justifyContent","background"],"mappings":"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","sourcesContent":["//import React from 'react'\n//import Axios from 'axios'\n//import { Form, Icon, Input, Button, Checkbox, Card } from 'antd'\n//import { Layout, Menu, Breadcrumb } from 'antd'\n//import 'antd/dist/antd.css'\n//import PLACE_SERVICE, { placeService } from '../../services/post-place'\n//import { MyContext } from '../../context'\n//const { Header, Content, Footer } = Layout\n\nconst baseURL =\n  process.env.NODE_ENV === 'production' ? 'here should be your production endpoint' : 'http://localhost:3000/api'\n\nclass Place extends React.Component {\n  state = {\n    unplan: {},\n    user: {},\n    places: {\n      name: '',\n      address: ''\n    },\n    form: {\n      title: '',\n      button: '', \n      endpoint: ''\n    }\n  }\n\n  //handleInput = e => {\n    //const { user } = this.state\n    //const key = e.target.name\n    //user[key] = e.target.value\n    //this.setState({ user })\n    //console.log(this.state.user)\n    //console.log(e.target.name)\n // }\n\n\n\n  handleInputs = (e) => {\n    const { places } = this.state;\n    const key = e.target.name;\n    places[key] = e.target.value;\n    this.setState({ places });\n  };\n\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { places, form } = this.state;\n    if (form.title === 'Edit') {\n      Axios.put(`http://localhost:3000/api/${form.endpoint}`, places)\n      .then(({ data }) => {\n        console.log(data);\n        this.setState({\n          places: {\n            name: '',\n           address:''\n          }\n        });\n        this.props.history.push('/places/${plan._id')\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    } else {\n    Axios\n      .post('http://localhost:3000/api/places', places)\n      .then(({ data }) => {\n        console.log(data);\n        this.setState({\n          character: {\n            name: '',\n            address:''\n          }\n        });\n        this.props.history.push('/places/${plan._id}')\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    }\n  };\n\n\n\n  //esso hace que me jale la parte de guardar la informacion de los places en la base de datos\n  //onSubmit = e => {\n    //e.preventDefault()\n    //let { user } = this.state\n    //console.log('onsubmit', user)\n    //placeService(user)\n      //.then(res => console.log('la respuesta en onsubment', res))\n      \n      //.catch(err => console.log('el error en onsubmit', err))\n  //}\n\n\n\n  componentDidMount() {\n    if (!localStorage.getItem('user')) return this.props.history.push('/login')\n    Axios.get(`${baseURL}/selectedPlan/${this.props.match.params.id}`)\n      .then(({ data }) => {\n        this.setState({\n          unplan: data.plan\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      //rocket\n      const { params } = this.props.match\n    if (params.id) {\n      Axios.get(`${baseURL}http://localhost:3000/api/places/${params.id}`)\n      .then(({ data: { places }}) => this.setState({ places }))\n      this.setState({ form: { title: 'Edit', button: 'Edit', endpoint: `/places/${params.id}` } })\n    } else {\n      this.setState({ form: { title: 'Create', button: 'Create', endpoint: '/places/' } })\n    }\n  }\n    \n  \n\n\n // table = () => {\n   // return (this.state.places.map((x) => {\n      \n     //   return(\n       //     <tr key={x.place}>\n         //       <th>{x.place}</th>\n           //     <td>{x.name}</td>\n             //   <td>{x.address}</td>\n        //    </tr>\n        //)\n   // }))\n  //}\n\n  //placeTransform = async() => {\n    //const response = await PLACE_SERVICE.placeService(this.state.place._id)\n    //const arrayplaces = response.data.places\n    //this.setState({place: arrayplaces})\n//}\n\n\nrender() {\n  const { places, form } = this.state;\n  console.log(this.props)\n  return (\n    <div\n      style={{\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: 'peru'\n      }}\n    >\n      <Card title={form.title} style={{ width: '50vw' }}>\n        <Form onSubmit={this.onSubmit}>\n          <Form.Item>\n            <Input value={places.name} onChange={this.handleInputs} type=\"text\" name=\"name\" placeholder=\"Name\" />\n          </Form.Item>\n          <Form.Item>\n            <Input\n              value={places.name}\n              onChange={this.handleInputs}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"address name\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Input\n              value={places.address}\n              onChange={this.handleInputs}\n              type=\"text\"\n              name=\"address\"\n              placeholder=\"put your address here\"\n            />\n          </Form.Item>\n          <Form.Item>\n              <Input type=\"submit\" value={form.button} />\n            </Form.Item>\n          \n        </Form>\n      </Card>\n    </div>\n  );\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n  //render() {\n    //const { unplan } = this.state\n    //if (!unplan) return <p>Loading data...</p>\n    //this.props.match.params.id\n    //return (\n      //<div style={{ display: 'flex', justifyContent: 'space-around' }}>\n        //<Layout>\n          //<Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n            //<div className=\"logo\" />\n            //<Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']} style={{ lineHeight: '64px' }}>\n              //<Menu.Item key=\"1\">nav 1</Menu.Item>\n              //<Menu.Item key=\"2\">nav 2</Menu.Item>\n              //<Menu.Item key=\"3\">nav 3</Menu.Item>\n            //</Menu>\n          //</Header>\n          //<Content style={{ padding: '0 50px', marginTop: 64 }}>\n            //<Breadcrumb style={{ margin: '16px 0' }}>\n              //<Breadcrumb.Item>Home</Breadcrumb.Item>\n              //<Breadcrumb.Item>List</Breadcrumb.Item>\n              //<Breadcrumb.Item>App</Breadcrumb.Item>\n            //</Breadcrumb>\n            //<div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n              //<Card style={{ width: 300 }}>\n                //<h1>{unplan.name}</h1>\n                //<p>{unplan.price}</p>\n                //<p>{unplan.role}</p>\n                //<p>{unplan.description}</p>\n                //<img src={unplan.image} alt=\"\" />\n              //</Card>\n              \n              \n              //<p>{unplan.name}</p>\n              //<Form onSubmit={this.onSubmit} className=\"login-form\">\n                //<Form.Item>\n                \n                  //<Input\n                    //onChange={this.handleInput}\n                    //name=\"name\"\n                    //prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    //placeholder=\"Address name\"\n                  ///>\n                //</Form.Item>\n                //<Form.Item>\n                  //<Input\n                    //onChange={this.handleInput}\n                    //name=\"address\"\n                    //prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    //placeholder=\"Put your address here\"\n                  ///>\n                  //<Form.Item>\n                    //<Input type=\"submit\" value=\"Submit\" />\n                  //</Form.Item>\n                //</Form.Item>\n              //</Form>\n              //<a href={`/pedidoCreate/${unplan._id}`}>\n                //<button>Add</button>\n              //</a>\n            //</div>\n          //</Content>\n        //</Layout>\n      //</div>\n    //)\n // }\n\n\nexport default Place\n"]},"metadata":{},"sourceType":"module"}